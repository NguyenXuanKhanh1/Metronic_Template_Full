import { OnDestroy, EventEmitter } from '@angular/core';
import { FileViewModel, FileResponse, FileRequest } from '../file/file.model';
import { ModalService } from '../modals/modal.service';
import { DataService } from '../services/data.service';
import { Observable } from 'rxjs';
import { AuthenticationService } from '../../auth/auth.service';
export declare class ViewerComponent implements OnDestroy {
    private _modalService;
    private _dataService;
    protected authenticationService: AuthenticationService;
    isLoading: boolean;
    images: FileViewModel[];
    useLibrary: boolean;
    headers: string[];
    multiple: boolean;
    galleryItems: (request: FileRequest) => Observable<FileResponse>;
    componentTitle: string;
    uploadDialogTitle: string;
    uploadDialogIcon: string;
    uploadTitle: string;
    uploadIcon: string;
    openGalleryTitle: string;
    openGalleryIcon: string;
    title: string;
    model: any[];
    zoomPrimaryImage: boolean;
    editable: boolean;
    cutRatio: number;
    resizeToWidth: number;
    maintainAspectRatio: boolean;
    validationName: string;
    validationScope: string;
    emitNullOnDestroy: boolean;
    modelChange: EventEmitter<any[]>;
    onOpenUserMediaGallery: EventEmitter<void>;
    constructor(_modalService: ModalService, _dataService: DataService, authenticationService: AuthenticationService);
    ngOnDestroy(): void;
    addImage(file: FileViewModel): void;
    setLoading(loading: boolean): void;
    openUserMediaGallery(): void;
}
