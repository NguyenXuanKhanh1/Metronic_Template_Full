import { OnInit, OnDestroy, TemplateRef, EventEmitter, ChangeDetectorRef } from '@angular/core';
import { Observable, BehaviorSubject } from 'rxjs';
import { FormDirectorExtraItemDirective } from '../form/form-director-extra-item.directive';
export declare class DropdownComponent implements OnInit, OnDestroy {
    private changeDetectorRef;
    itemTemplate: TemplateRef<any>;
    groupTemplate: TemplateRef<any>;
    footerTemplate: TemplateRef<any>;
    extraLabelItem: FormDirectorExtraItemDirective;
    change: EventEmitter<any>;
    title: string;
    description: string;
    direction: 'horizontal' | 'vertical';
    alignVertical: boolean;
    multiple: boolean;
    bindLabel: string;
    bindValue: string;
    model: any;
    closeOnSelect: boolean;
    dropdownPosition: string;
    loading: boolean;
    loadingText: string;
    markFirst: boolean;
    notFoundText: string;
    placeholder: string;
    pageSize: number;
    groupBy: string;
    readonly: boolean;
    disabled: boolean;
    typeToSearchText: string;
    searchable: boolean;
    searchFunction: (searchText: string, index: number, pageIndex: number, pageSize: number) => Observable<{
        items: any[];
        totalItems: number;
    }>;
    lazyload: boolean;
    beforeSearch: Observable<any>;
    afterSearch: Observable<any>;
    validationName: string;
    validationScope: string;
    controlName: string;
    emitNullOnDestroy: boolean;
    totalItems: number;
    searchItems: any[];
    searchText$: BehaviorSubject<string>;
    private subscriptions;
    private currentPage;
    private numberOfItemsFromEndBeforeFetchingMore;
    private fetchMore$;
    constructor(changeDetectorRef: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnDestroy(): void;
    onBlur(): void;
    scroll(lastIndex: number): void;
    fetchMore(): void;
    clear(): void;
    private rebind;
    private append;
}
